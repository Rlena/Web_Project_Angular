import { Component, Input } from '@angular/core';   /* импортируем такую сущность как component
                                                    из библиотеки angular/core (1 шаг - создание компонента) */

@Component({   /* Мы должны сообщить Angular, что класс UserComponent является компонентом.
               Данный декоратор описывает поведение класса UserComponent.
               Также нам нужно передать базовую конфигурацию в данный компонент. (3 шаг - создание компонента) */

     selector: 'app-user',  /* 1-ое обязательные поле компонента: selector - принимает строковое значение, это должен быть уникальный ключ,
                            с помощью которого мы сможем потом обращаться к данному компоненту (т.е. пишем сюда название тега,
                            который будет определять данный компонент) */

     templateUrl: './user.component.html', /* 2-ое обазательное поле компонента: шаблон - передаем ему относительный путь от данного файла,
                                           где лежит шаблон нашего компонента */

     styleUrls: ['./user.component.scss']  /* подключаем стили для данного компонента */

     /* После прописывания необходимых полей в @Component, нужно зарегистрировать новый компонент UserComponent в модуле app.module.ts
     (4.0 шаг - создание компонента) */
})

export class UserComponent {   /* определяем класс, чтобы создать данный компонент
                                  и сразу его экспортируем, т.к. будем использовать в других местах. (2 шаг - создание компонента)
                                  (Любая сущность в Angular это typeScript-класс)  */

    @Input() user;  /* отмечаем, что мы ожидаем что-то входящее в данный компонент.
                    Далее указываем куда следует положить input данного компонента, напр. мы будем складывать ее в переменную user
                    (2.1 шаг - вывод списка элементов) */

    isMarked = false;  /* по умолчанию, у нас будет каждый пользователь не отмечен. (3 шаг - директивы)  */

    onClick() {  /* создаем метод onClick() прямо внутри класса. (2.1 шаг - директивы) */

        this.isMarked = true;  /* при клике мы будем обращаться к этой переменной isMarked и будем говорить,
                               что теперь она у нас будет в значении true. (4 шаг - директивы)
                               Переменная меняется, но пока ни за что не отвечает.
                               Поэтому в user.component.scss создадим свойство для карточек, кот. будут отмечаться. (5.0 шаг - директивы) */
    }
    // когда мы нажали на кнопку отметить, в шаблоне мы попали в метод onClick() и в компоненте мы поменяли внутреннее поле на true
    // в самом шаблоне мы проверяем, если поле isMarked = true, то мы добавляем класс marked
}
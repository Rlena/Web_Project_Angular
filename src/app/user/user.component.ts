// импортируем такую сущность как component из библиотеки angular/core (1 шаг)
import { Component, Input } from '@angular/core';

// Данный декоратор описывает поведение класса UserComponent
// Передаем базовую конфигурацию в данный компонент (3 шаг)
@Component({
     // обязательные свойства компонента
     // selector - принимает строковое значение, это должен быть уникальный ключ, с помощью которого мы сможем потом обращаться к данному компоненту, т.е. пишем сюда название тега, который будет определять данный компонент
     selector: 'app-user',

     // шаблон - передаем ему относительный путь от данного файла , где лежит шаблон нашего компонента
     templateUrl: './user.component.html',

     // подключаем стили для данного компонента
     styleUrls: ['./user.component.scss']
})

// определяем класс, чтобы создать данный компонент и сразу его экспортируем, т.к. будем использовать в других местах (2 шаг)
export class UserComponent {
    // отмечаем, что мы ожидаем что-то входящее в данный компонент
    // далее указываем куда следует положить input данного компонента, напр. мы будем складывать ее в переменную user
    @Input() user;
    

    // по умолчанию, у нас будет каждый пользователь не отмечен
    isMarked = false;

    // создаем метод onClick() в user.component
    onClick() {
    // при клике мы будем обращаться к этой переменной и будем говорить, что теперь она у нас будет в значении true
       this.isMarked = true;
    }
    // когда мы нажали на кнопку отметить, в шаблоне мы попали в метод nClick() и в компоненте мы поменяли внутреннее поле на true
    // в самом шаблоне мы проверяем, если поле isMarked = true, то мы добавляем класс marked
}